name: 'Maven Release'
description: 'Deploy using maven as build tool'
outputs:
  version:
    description: "The released version"
    value: ${{ steps.resolve_values.outputs.version }}
inputs:
  java-version:
    description: 'JDK version'
    required: true
  deploy-server:
    description: 'Dist server id, e.g. central, github, nexus'
    required: true
  deploy-actor:
    description: 'user to authenticate at the artifact repository'
    required: true
  deploy-token:
    description: 'password to authenticate at the artifact repository'
    required: true
  gpg-private-key:
    description: 'private key for artifact signing'
    required: true
  gpg-passphrase:
    description: 'pass phrase for te gpg signing key'
    required: true
  maven-profiles:
    description: 'Maven profiles to activate, comma-delimited'
    default: ''
  maven-version:
    description: 'Maven version'
    default: '3.9.9'
  deploy-release-url:
    description: 'Dist server release URL'
    default: ''
  deploy-snapshot-url:
    description: 'Dist server snapshot URL'
    default: ''
  github-token:
    description: "Required for permission to tag the repo."
    required: true
  tag-bump:
    description: 'Tag bump'
    default: 'patch'
  tag-prefix:
    description: 'Tag prefix'
    default: ''

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - name: Setup Git User
      shell: bash
      # language="shell script"
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

    - name: Increment and Tag Version
      if: ${{ inputs.tag-bump != '' }}
      id: tag_latest
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ inputs.github-token }}
        default_bump: ${{ inputs.tag-bump }}
        tag_prefix: ${{ inputs.tag-prefix }}

    - name: Setup Jdk
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: 'temurin'
        java-version: ${{ inputs.java-version }}
        server-id: ${{ inputs.deploy-server }}
        server-username: DEPLOY_ACTOR
        server-password: DEPLOY_TOKEN

    - name: Install Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: ${{ inputs.maven-version }}

    #- uses: s4u/maven-settings-action@v3.1.0
    #  with:
    #    githubServer: true
    #    servers: >
    #      [{
    #        "id": "${{ inputs.deploy-server }}",
    #        "username": "${env.DEPLOY_ACTOR}",
    #        "password": "${env.DEPLOY_TOKEN}"
    #      }]

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - name: Resolve Values
      id: resolve_values
      shell: bash
      env:
        PROFILES_RAW: ${{ inputs.maven-profiles }}
      # language="shell script"
      run: |
        # Convert spaces to commas in the profiles string
        declare -a profilesArr=( ${PROFILES_RAW} )
        PROFILES_CSV=$(IFS=, ; echo "${profilesArr[*]}")
        # Determine version
        declare -a _args=( -e )
        if [ -n "${PROFILES_CSV}" ]; then
          _args+=( "-P${PROFILES_CSV}" )
        fi
        VERSION="$(mvn ${_args[*]} help:evaluate -q -DforceStdout -Dexpression=project.version)"
        #VERSION="${VERSION%-SNAPSHOT}"
        echo "VERSION=${VERSION}"
        printf '%s\n' \
          "profiles=${PROFILES_CSV}" \
          "version=${VERSION}" \
          >> $GITHUB_OUTPUT

    - name: Execute Maven Deploy
      if: ${{ github.actor != 'dependabot[bot]' }}
      env:
        DEPLOY_SERVER: ${{ inputs.deploy-server }}
        DEPLOY_ACTOR: ${{ inputs.deploy-actor }}
        DEPLOY_TOKEN: ${{ inputs.deploy-token }}
        DEPLOY_RELEASE_URL: ${{ inputs.deploy-release-url }}
        DEPLOY_SNAPSHOT_URL: ${{ inputs.deploy-snapshot-url }}
        MAVEN_GPG_KEY: ${{ inputs.gpg-private-key }}
        MAVEN_GPG_PASSPHRASE: ${{ inputs.gpg-passphrase }}
        MAVEN_PROFILES: ${{ steps.resolve_values.outputs.profiles }}
      shell: bash
      # language="shell script"
      run: |
        declare -a _args=( "-e" )
        _args+=( "--batch-mode" )
        _args+=( "--no-transfer-progress" )
        if [ -n "${DEPLOY_SERVER}" ]; then
          if [ -n "${DEPLOY_RELEASE_URL}" ]; then
            _args+=( "-DaltReleaseDeploymentRepository=${DEPLOY_SERVER}::${DEPLOY_RELEASE_URL}" )
          fi
          if [ -n "${DEPLOY_SNAPSHOT_URL}" ]; then
            _args+=( "-DaltSnapshotDeploymentRepository=${DEPLOY_SERVER}::${DEPLOY_SNAPSHOT_URL}" )
          fi
        fi
        if [ -n "${MAVEN_PROFILES}" ]; then
          _args+=( "-P${MAVEN_PROFILES}" )
        fi
        export GPG_TTY=$(tty) && mvn "${_args[@]}" deploy

    - name: Update POM Version
      if: ${{ github.actor != 'dependabot[bot]' }}
      shell: bash
      # language="shell script"
      run: |
        declare -a _args=( "-e" )
        _args+=( "--batch-mode" )
        _args+=( "--no-transfer-progress" )
        _args+=( "-DprocessAllModules=true" )
        _args+=( "-DnextSnapshot=true" )
        _args+=( "-DgenerateBackupPoms=false" )
        mvn "${_args[@]}" versions:set

    - name: Commit POM Version Update
      uses: stefanzweifel/git-auto-commit-action@v6

    - name: Execute Maven Install
      if: ${{ github.actor == 'dependabot[bot]' }}
      shell: bash
      # language="shell script"
      run: |
        mvn --batch-mode install -e
