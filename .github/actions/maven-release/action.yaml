name: 'Maven Release'
description: 'Deploy using maven as build tool'
outputs:
  version:
    description: "The released version"
    value: ${{ steps.resolve_values.outputs.version-release }}
inputs:
  java-version:
    description: 'JDK version'
    required: true
  deploy-server:
    description: 'Dist server id, e.g. central, github, nexus'
    required: true
  deploy-actor:
    description: 'user to authenticate at the artifact repository'
    required: true
  deploy-token:
    description: 'password to authenticate at the artifact repository'
    required: true
  gpg-private-key:
    description: 'private key for artifact signing'
    required: true
  gpg-passphrase:
    description: 'pass phrase for te gpg signing key'
    required: true
  maven-profiles:
    description: 'Maven profiles to activate, comma-delimited'
    default: ''
  maven-version:
    description: 'Maven version'
    default: '3.9.9'
  deploy-release-url:
    description: 'Dist server release URL'
    default: ''
  deploy-snapshot-url:
    description: 'Dist server snapshot URL'
    default: ''
  github-actor:
    description: "Required for permission to tag the repo."
    default: ${{ github.actor }}
  github-token:
    description: "Required for permission to tag the repo."
    default: ${{ github.token }}
  tag-prefix:
    description: 'Tag prefix'
    default: 'v'

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-tags: true
        token: ${{ inputs.github-token }}

    #- uses: fregante/setup-git-user@v2
    - name: Setup Git Config
      shell: bash
      # language="shell script"
      run: |
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com
        printf '%s\n' \
          '/github-actions' \
          >> ".git/info/exclude"

    - name: 'Checkout resources repository'
      uses: actions/checkout@v4
      with:
        repository: 'emergentdotorg/maven-emergent-parent'
        ref: 'main'
        path: 'github-actions'
        token: ${{ inputs.github-token }}
        sparse-checkout: |
          .github/resources

    - name: Setup Jdk
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: 'temurin'
        java-version: ${{ inputs.java-version }}
        server-id: ${{ inputs.deploy-server }}
        server-username: DEPLOY_ACTOR
        server-password: DEPLOY_TOKEN

    - name: Install Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: ${{ inputs.maven-version }}

    - name: Resolve Values
      id: resolve_values
      shell: bash
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
        MAVEN_PROFILES: ${{ inputs.maven-profiles }}
      # language="shell script"
      run: |
        # Convert spaces to commas in the profiles string
        declare -a _profiles=( ${MAVEN_PROFILES} )
        PROFILES=$(IFS=, ; echo "${_profiles[*]}")
        # Determine version
        VERSION_CUR="$(mvn -e help:evaluate -q -DforceStdout -Dexpression=project.version)"
        VERSION_REL="$(mvn -e help:evaluate -q -DforceStdout -Dexpression=version.release)"
        if [ "${VERSION_CUR}" != "${VERSION_REL}" ]; then
          VERSION_TAG=true
        fi
        #VERSION="${VERSION%-SNAPSHOT}"
        echo "PROFILES=${PROFILES}"
        echo "VERSION_CUR=${VERSION_CUR}"
        echo "VERSION_REL=${VERSION_REL}"
        echo "VERSION_TAG=${VERSION_TAG:-false}"
        printf '%s\n' \
          "profiles=${PROFILES}" \
          "version-current=${VERSION_CUR}" \
          "version-release=${VERSION_REL}" \
          "version-needtag=${VERSION_TAG:-false}" \
          >> $GITHUB_OUTPUT

    - name: Increment and Tag Version
      if: steps.resolve_values.outputs.version-needtag
      id: tag_latest
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ inputs.github-token }}
        tag_prefix: ${{ inputs.tag-prefix }}
        custom_tag: ${{ format('{0}', steps.resolve_values.outputs.version-release) }}

    - uses: actions/checkout@v4
      if: ${{ steps.resolve_values.outputs.version-needtag && success() }}
      with:
        fetch-tags: true
        token: ${{ inputs.github-token }}

    - name: Execute Maven Deploy
      env:
        DEPLOY_ACTOR: ${{ inputs.deploy-actor }}
        DEPLOY_TOKEN: ${{ inputs.deploy-token }}
        DEPLOY_SERVER: ${{ inputs.deploy-server }}
        GITHUB_ACTOR: ${{ inputs.github-actor }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        MAVEN_GPG_KEY: ${{ inputs.gpg-private-key }}
        MAVEN_GPG_PASSPHRASE: ${{ inputs.gpg-passphrase }}
        MAVEN_PROFILES: ${{ steps.resolve_values.outputs.profiles }}
        GITHUB_WORKSPACE: ${{ github.workspace }}
        MAVEN_SETTINGS: ${{ github.workspace }}/github-actions/.github/resources/settings.xml
      shell: bash
      # language="shell script"
      run: |
        catIfExists() {
          if [ -f "$1" ]; then
            echo "File: $1"
            cat "$1"
            echo "-----"
          else
            echo "WARNING: File $1 does not exist"
          fi
        }
        catIfExists "${MAVEN_SETTINGS}"
        declare -a _args=( "-e"  "--batch-mode" "--no-transfer-progress" )
        _args+=( "-s" "${MAVEN_SETTINGS}" )
        if [ -n "${MAVEN_PROFILES}" ]; then _args+=( "-P${MAVEN_PROFILES}" ) ; fi
        export GPG_TTY=$(tty) && mvn "${_args[@]}" deploy

    - name: Update POM Version
      if: ${{ success() }}
      shell: bash
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
        MAVEN_SETTINGS: ${{ github.workspace }}/github-actions/.github/resources/settings.xml
      # language="shell script"
      run: |
        declare -a _args=( "-e"  "--batch-mode" "--no-transfer-progress" )
        _args+=( "-s" "${MAVEN_SETTINGS}" )
        _args+=( -DgenerateBackupPoms=false -DprocessAllModules=true )
        mvn "${_args[@]}" versions:set -DnextSnapshot=true

    - name: Commit POM Version Update
      uses: stefanzweifel/git-auto-commit-action@v6
