name: Scratch

on:
  workflow_dispatch:
    inputs:
      op:
        description: 'Operation to perform'
        type: choice
        default: misc
        options:
          - misc
          - dump-context
          - setup-java

      settings-dir:
        description: '~/.m2'
        type: string
        default: ''


jobs:
  scratch:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      #- uses: fregante/setup-git-user@v2
      - name: Setup Git Config
        if: ${{ inputs.op == 'misc' }}
        shell: bash
        # language="shell script"
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          printf '%s\n' \
            '/github-actions' \
            >> ".git/info/exclude"

      - name: 'Checkout resources repository'
        if: ${{ inputs.op == 'misc' }}
        uses: actions/checkout@v4
        with:
          repository: 'emergentdotorg/maven-emergent-parent'
          ref: 'main'
          path: 'github-actions'
          token: ${{ github.token }}
          sparse-checkout: |
            .github/resources

      - name: Resolve Paths
        id: resolve_paths
        shell: bash
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
          SETTINGS_DIR: ${{ inputs.settings-dir != '' && inputs.settings-dir || '~/.m2' }}
        # language="shell script"
        run: |
          RESOLVED_DIR="${SETTINGS_DIR/#~/$HOME}"
          mkdir -p "${RESOLVED_DIR}"
          printf '%s\n' \
          "settings-path=${RESOLVED_DIR}" \
          "user-settings=${RESOLVED_DIR}/settings.xml" \
          "user-toolchains=${RESOLVED_DIR}/toolchains.xml" \
          "global-settings=${RESOLVED_DIR}/settings-global.xml" \
          >> $GITHUB_OUTPUT

      - name: 'Verify Setup'
        if: ${{ inputs.op == 'misc' }}
        shell: bash
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
          USER_SETTINGS: ${{ steps.setup_java.outputs.user-settings }}
          USER_TOOLCHAINS: ${{ steps.setup_java.outputs.user-toolchains }}
          GLOBAL_SETTINGS: ${{ steps.setup_java.outputs.global-settings }}
        # language="shell script"
        run: |
          catIfExists() {
            if [ -f "$1" ]; then
            echo "File: $1"
            cat "$1"
            echo "-----"
            else
            echo "WARNING: File $1 does not exist"
            fi
          }
          echo "USER_SETTINGS=${USER_SETTINGS}"
          echo "GLOBAL_SETTINGS=${GLOBAL_SETTINGS}"
          echo "USER_TOOLCHAINS=${USER_TOOLCHAINS}"
          echo "GITHUB_WORKSPACE=${GITHUB_WORKSPACE}"
          echo "PWD=$(pwd)"
          find . -path './.git/**' -prune -o \( -type f -print \) > listing.txt
          catIfExists listing.txt
          catIfExists "${USER_SETTINGS}"
          catIfExists "${GLOBAL_SETTINGS}"
          catIfExists "${USER_TOOLCHAINS}"
          catIfExists "${GITHUB_WORKSPACE}/github-actions/.github/resources/settings.xml"
          catIfExists "./github-actions/.github/resources/settings.xml"

      - name: Dump Context Java
        if: ${{ inputs.op == 'dump-context' }}
        id: dump_context
        uses: emergentdotorg/github-actions/dump-context@v2

      - name: Setup Java
        id: setup_java
        if: ${{ inputs.op == 'setup-java' }}
        uses: emergentdotorg/github-actions/setup-java-env@v2
        with:
          deploy-server: 'central'
          deploy-username-env: CENTRAL_ACTOR
          deploy-password-env: CENTRAL_TOKEN
          github-username-env: GITHUB_ACTOR
          github-password-env: GITHUB_TOKEN
          gpg-passphrase-env: GPG_PASSPHRASE
          gpg-private-key: ${{ secrets.maven_gpg_private_key }}

      - name: 'Verify Java and Maven'
        if: ${{ inputs.op == 'setup-java' && success() }}
        shell: bash
        env:
          USER_SETTINGS: ${{ steps.setup_java.outputs.user-settings }}
          USER_TOOLCHAINS: ${{ steps.setup_java.outputs.user-toolchains }}
          GLOBAL_SETTINGS: ${{ steps.setup_java.outputs.global-settings }}
        # language="shell script"
        run: |
          java -version
          echo "JAVA_HOME: $JAVA_HOME"
          echo "JAVA_HOME_8_X64: $JAVA_HOME_8_X64"
          echo "JAVA_HOME_11_X64: $JAVA_HOME_11_X64"
          echo "JAVA_HOME_17_X64: $JAVA_HOME_17_X64"
          mvn -version
          catIfExists() {
            if [ -f "$1" ]; then
              cat "$1"
            else
              echo "WARNING: File $1 does not exist"
            fi
          }
          catIfExists "${USER_SETTINGS}"
          catIfExists "${GLOBAL_SETTINGS}"
          catIfExists "${USER_TOOLCHAINS}"
          catIfExists ${{ github.workspace }}/.git/config
